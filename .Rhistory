if (n_tot == 0){
Y = c(Y,0)
}
else{
Y=c(Y,n_obj/n_tot)
}
}
plot(X,Y,type="l", xlim = c(0,70), ylim = c(0,1),col=coloration[i])
#ggplot(indiv,aes(x=duree,y=taux))+geom_smooth()
legend(50,1,legend=c("> 18 et < 30 ans","> 30 et < 40 ans","> 40 et < 50 ans","> 50 et < 60 ans"),col=c("red","orange","green","blue"),lty=c(1,1,1,1,1,1),cex=0.8)
par(new=T)
}
#présence d'immigrés dans le quartier (l_immi)
#indiv$l_immi
#indiv$l_immi_rec
## Recodage de indiv$l_immi en indiv$l_immi_rec
indiv$l_immi_code <- as.character(indiv$l_immi)
indiv$l_immi_code <- fct_recode(indiv$l_immi_code,
"Tous" = "1",
"sup 50%" = "2",
"eq 50%" = "3",
"inf 50%" = "4",
"Aucun" = "5",
"null" = "8",
"null" = "9")
indiv_pd <- svydesign(ids = indiv$ident, data = indiv, weights = indiv$poidsi)
ggsurvey(indiv_pd, aes(x = as.factor(l_immi_code), y = as.factor(i_cnfpol_rec), fill = as.factor(i_cnfpol_rec)))+
geom_bar(stat = "identity")
tb1 <- data.frame(cprop(svytable(~i_cnfpol_rec+l_immi_code, indiv_pd[which(indiv_pd$variables$i_cnfpol_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_cnfpol_rec != "Total")
ggplot(tb2, aes(x = l_immi_code, y= Freq, fill = i_cnfpol_rec)) +
geom_bar(stat="identity")
#relations dans le quartier (a_rquart) (avec combien de personnes de ton quartier, es-tu ami ?)
#indiv$a_rquart_rec
## Recodage de indiv$l_immi en indiv$l_immi_rec
indiv$a_rquart_code <- as.character(indiv$a_rquart)
indiv$a_rquart_code <- fct_recode(indiv$a_rquart_code,
"Tous" = "1",
"sup 50%" = "2",
"eq 50%" = "3",
"inf 50%" = "4",
"Aucun" = "5",
"null" = "8",
"null" = "9")
indiv_pd <- svydesign(ids = indiv$ident, data = indiv, weights = indiv$poidsi)
ggsurvey(indiv_pd, aes(x = as.factor(a_rquart_code), y = as.factor(i_cnfpol_rec), fill = as.factor(i_cnfpol_rec)))+
geom_bar(stat = "identity")
tb1 <- data.frame(cprop(svytable(~i_cnfpol_rec+a_rquart_code, indiv_pd[which(indiv_pd$variables$i_cnfpol_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_cnfpol_rec != "Total")
ggplot(tb2, aes(x = a_rquart_code, y= Freq, fill = i_cnfpol_rec)) +
geom_bar(stat="identity")
#sécurité du quartier(l_quart_secu)
indiv_pd <- svydesign(ids = indiv$ident, data = indiv, weights = indiv$poidsi)
ggsurvey(indiv_pd, aes(x = as.factor(l_quart_secu_rec), y = as.factor(i_cnfpol_rec), fill = as.factor(i_cnfpol_rec)))+
geom_bar(stat = "identity")
tb1 <- data.frame(cprop(svytable(~i_cnfpol_rec+l_quart_secu_rec, indiv_pd[which(indiv_pd$variables$i_cnfpol_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_cnfpol_rec != "Total")
ggplot(tb2, aes(x = l_quart_secu_rec, y= Freq, fill = i_cnfpol_rec)) +
geom_bar(stat="identity")
#Vivre dans un QPV (qpv_i)
group_qpv = rep("null",dimension[1])
group_qpv[which(indiv$qpv_i == 0 & indiv$group1_code=="G1-I")] = "G1-I out QPV"
group_qpv[which(indiv$qpv_i == 1 & indiv$group1_code=="G1-I")] = "G1-I in QPV"
group_qpv[which(indiv$qpv_i == 0 & indiv$group1_code=="G2-I")] = "G2-I out QPV"
group_qpv[which(indiv$qpv_i == 1 & indiv$group1_code=="G2-I")] = "G2-I in QPV"
group_qpv[which(indiv$qpv_i == 0 & indiv$group1_code=="Autre")] = "Autre out QPV"
group_qpv[which(indiv$qpv_i == 1 & indiv$group1_code=="Autre")] = "Autre in QPV"
indiv["group_QPV"] = group_qpv
ggsurvey(indiv_pd, aes(x = as.factor(group_QPV), y = as.factor(i_cnfpol_rec), fill = as.factor(i_cnfpol_rec)))+
geom_bar(stat = "identity")
tb1 <- data.frame(cprop(svytable(~i_cnfpol_rec+group_QPV, indiv_pd[which(indiv_pd$variables$i_cnfpol_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_cnfpol_rec != "Total")
ggplot(tb2, aes(x = group_QPV, y= Freq, fill = i_cnfpol_rec)) +
geom_bar(stat="identity")
tb1 <- data.frame(cprop(svytable(~i_cnfpol_rec+qpv_i_rec, indiv_pd[which(indiv_pd$variables$qpv_i_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_cnfpol_rec != "Total")
ggplot(tb2, aes(x = qpv_i_rec, y= Freq, fill = i_cnfpol_rec)) +
geom_bar(stat="identity")
#group_1 :
ggsurvey(indiv_pd, aes(x = as.factor(group1_code), y = as.factor(i_contri_rec), fill = as.factor(i_contri_rec)))+
geom_bar(stat = "identity")
tb1 <- data.frame(cprop(svytable(~i_contri_rec+group1_code, indiv_pd[which(indiv_pd$variables$i_contri_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_contri_rec != "Total")
ggplot(tb2, aes(x = group1_code, y= Freq, fill = i_contri_rec)) +
geom_bar(stat="identity")
#présence d'immigrés dans le quartier (l_immi)
ggsurvey(indiv_pd, aes(x = as.factor(l_immi_code), y = as.factor(i_contri_rec), fill = as.factor(i_contri_rec)))+
geom_bar(stat = "identity")
tb1 <- data.frame(cprop(svytable(~i_contri_rec+l_immi_code, indiv_pd[which(indiv_pd$variables$i_contri_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_contri_rec != "Total")
ggplot(tb2, aes(x = l_immi_code, y= Freq, fill = i_contri_rec)) +
geom_bar(stat="identity")
#sécurité du quartier(l_quart_secu)
indiv_pd <- svydesign(ids = indiv$ident, data = indiv, weights = indiv$poidsi)
ggsurvey(indiv_pd, aes(x = as.factor(l_quart_secu_rec), y = as.factor(i_contri_rec), fill = as.factor(i_contri_rec)))+
geom_bar(stat = "identity")
tb1 <- data.frame(cprop(svytable(~i_contri_rec+l_quart_secu_rec, indiv_pd[which(indiv_pd$variables$i_contri_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_contri_rec != "Total")
ggplot(tb2, aes(x = l_quart_secu_rec, y= Freq, fill = i_contri_rec)) +
geom_bar(stat="identity")
#Vivre dans un QPV (qpv_i)
ggsurvey(indiv_pd, aes(x = as.factor(group_QPV), y = as.factor(i_contri_rec), fill = as.factor(i_contri_rec)))+
geom_bar(stat = "identity")
tb1 <- data.frame(cprop(svytable(~i_contri_rec+group_QPV, indiv_pd[which(indiv_pd$variables$i_contri_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_contri_rec != "Total")
ggplot(tb2, aes(x = group_QPV, y= Freq, fill = i_contri_rec)) +
geom_bar(stat="identity")
tb1 <- data.frame(cprop(svytable(~i_contri_rec+qpv_i_rec, indiv_pd[which(indiv_pd$variables$qpv_i_rec != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_contri_rec != "Total")
ggplot(tb2, aes(x = qpv_i_rec, y= Freq, fill = i_contri_rec)) +
geom_bar(stat="identity")
#group_1 :
tb1 <- data.frame(cprop(svytable(~i_control_rec_a+group1_code, indiv_pd[which(indiv_pd$variables$i_control_rec_a != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_control_rec_a != "Total")
ggplot(tb2, aes(x = group1_code, y= Freq, fill = i_control_rec_a)) +
geom_bar(stat="identity")+
ggtitle("Ils vous ont expliqué ce qu'ils faisaient et pourquoi")
tb1 <- data.frame(cprop(svytable(~i_control_rec_b+group1_code, indiv_pd[which(indiv_pd$variables$i_control_rec_b != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_control_rec_b != "Total")
ggplot(tb2, aes(x = group1_code, y= Freq, fill = i_control_rec_b)) +
geom_bar(stat="identity")+
ggtitle("Ils ont été polis")
tb1 <- data.frame(cprop(svytable(~i_control_rec_c+group1_code, indiv_pd[which(indiv_pd$variables$i_control_rec_c != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_control_rec_c != "Total")
ggplot(tb2, aes(x = group1_code, y= Freq, fill = i_control_rec_c)) +
geom_bar(stat="identity")+
ggtitle("Ils vous ont tutoyé")
tb1 <- data.frame(cprop(svytable(~i_control_rec_d+group1_code, indiv_pd[which(indiv_pd$variables$i_control_rec_d != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_control_rec_d != "Total")
ggplot(tb2, aes(x = group1_code, y= Freq, fill = i_control_rec_d)) +
geom_bar(stat="identity")+
ggtitle("Ils ont fouillé vos vêtements et vos sacs")
tb1 <- data.frame(cprop(svytable(~i_control_rec_e+group1_code, indiv_pd[which(indiv_pd$variables$i_control_rec_e != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_control_rec_e != "Total")
ggplot(tb2, aes(x = group1_code, y= Freq, fill = i_control_rec_e)) +
geom_bar(stat="identity")+
ggtitle("Ils vous ont provoqué, insulté")
tb1 <- data.frame(cprop(svytable(~i_control_rec_f+group1_code, indiv_pd[which(indiv_pd$variables$i_control_rec_f != "Refus ou ne sait pas")])))
tb2 <- filter(tb1,i_control_rec_f != "Total")
ggplot(tb2, aes(x = group1_code, y= Freq, fill = i_control_rec_f)) +
geom_bar(stat="identity")+
ggtitle("Ils ont été brutaux")
---
title: "Premières statistiques descriptives"
---
title: "ACM et Arbre de décision"
---
title: "Premières statistiques descriptives"
knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(tidyverse)
library(dplyr)
library(labelled)
library(survey)
library(arrow)
library(ggplot2)
library(questionr)
source("Base.R")
source("stat_desc.Rmd")
indiv$origine_tous_g2_cont <- fct_recode(indiv$origine_tous_g2_cont,
"Sans ascendance direct" = "0",
"G1 français ne hors de France métro" = "10",
"G2 français ne hors de France métro" = "11",
"G1 d'Outre-mer" = "20",
"G2 d'Outre-mer" = "22",
"G1 Afrique" = "30",
"G2 Afrique" = "33",
"G1 Afrique" = "40",
"G2 Afrique" = "44",
"G1 Afrique" = "50",
"G2 Afrique" = "55",
"G1 Afrique" = "60",
"G2 Afrique" = "66",
"G1 Afrique" = "70",
"G2 Afrique" = "77",
"G1 Asie" = "80",
"G2 Asie" = "88",
"G1 Asie" = "90",
"G2 Asie" = "99",
"G1 Asie" = "100",
"G1 Asie" = "110",
"G2 Asie" = "111",
"G1 Europe" = "120",
"G2 Europe" = "121",
"G1 Europe" = "130",
"G2 Europe" = "131",
"G1 Europe" = "140",
"G2 Europe" = "141",
"G1 Europe" = "150",
"G2 Europe" = "151",
"G1 Autre" = "160",
"G2 Autre" = "161"
)
indiv$origine_tous_g2_class <- fct_recode(indiv$origine_tous_g2_class,
"Sans ascendance direct" = "0",
"G1 français ne hors de France métro" = "10",
"G2 français ne hors de France métro" = "11",
"G1 d'Outre-mer" = "20",
"G2 d'Outre-mer" = "22",
"G1 Maghreb" = "30",
"G2 Maghreb" = "33",
"G1 Maghreb" = "40",
"G2 Maghreb" = "44",
"G1 Sahel" = "50",
"G2 Sahel" = "55",
"G1 Guinée" = "60",
"G2 Guinée" = "66",
"G1 Afrique" = "70",
"G2 Afrique" = "77",
"G1 Asie" = "80",
"G2 Asie" = "88",
"G1 Trurquie/Moyen-Orient" = "90",
"G2 Turquie/Moyen-Orient" = "99",
"G1 Chine" = "100",
"G1 Asie" = "110",
"G2 Asie" = "111",
"G1 Europe" = "120",
"G2 Europe" = "121",
"G1 Europe" = "130",
"G2 Europe" = "131",
"G1 Europe" = "140",
"G2 Europe" = "141",
"G1 Europe" = "150",
"G2 Europe" = "151",
"G1 Autre" = "160",
"G2 Autre" = "161"
)
## Recodage de indiv$origine_tous_g2 en indiv$origine_tous_g2_class
indiv$origine_tous_g2_class <- as.character(indiv$origine_tous_g2)
indiv$origine_tous_g2_class <- fct_recode(indiv$origine_tous_g2_class,
"Sans ascendance direct" = "0",
"G1 français ne hors de France métro" = "10",
"G2 français ne hors de France métro" = "11",
"G1 d'Outre-mer" = "20",
"G2 d'Outre-mer" = "22",
"G1 Maghreb" = "30",
"G2 Maghreb" = "33",
"G1 Maghreb" = "40",
"G2 Maghreb" = "44",
"G1 Sahel" = "50",
"G2 Sahel" = "55",
"G1 Guinée" = "60",
"G2 Guinée" = "66",
"G1 Afrique" = "70",
"G2 Afrique" = "77",
"G1 Asie" = "80",
"G2 Asie" = "88",
"G1 Trurquie/Moyen-Orient" = "90",
"G2 Turquie/Moyen-Orient" = "99",
"G1 Chine" = "100",
"G1 Asie" = "110",
"G2 Asie" = "111",
"G1 Europe" = "120",
"G2 Europe" = "121",
"G1 Europe" = "130",
"G2 Europe" = "131",
"G1 Europe" = "140",
"G2 Europe" = "141",
"G1 Europe" = "150",
"G2 Europe" = "151",
"G1 Autre" = "160",
"G2 Autre" = "161"
)
## Recodage de indiv$origine_tous_g2 en indiv$origine_tous_g2_class
indiv$origine_tous_g2_cont <- as.character(indiv$origine_tous_g2)
indiv$origine_tous_g2_cont <- fct_recode(indiv$origine_tous_g2_cont,
"Sans ascendance direct" = "0",
"G1 français ne hors de France métro" = "10",
"G2 français ne hors de France métro" = "11",
"G1 d'Outre-mer" = "20",
"G2 d'Outre-mer" = "22",
"G1 Afrique" = "30",
"G2 Afrique" = "33",
"G1 Afrique" = "40",
"G2 Afrique" = "44",
"G1 Afrique" = "50",
"G2 Afrique" = "55",
"G1 Afrique" = "60",
"G2 Afrique" = "66",
"G1 Afrique" = "70",
"G2 Afrique" = "77",
"G1 Asie" = "80",
"G2 Asie" = "88",
"G1 Asie" = "90",
"G2 Asie" = "99",
"G1 Asie" = "100",
"G1 Asie" = "110",
"G2 Asie" = "111",
"G1 Europe" = "120",
"G2 Europe" = "121",
"G1 Europe" = "130",
"G2 Europe" = "131",
"G1 Europe" = "140",
"G2 Europe" = "141",
"G1 Europe" = "150",
"G2 Europe" = "151",
"G1 Autre" = "160",
"G2 Autre" = "161"
)
install.packages("rpart.plot") #pour l'arbre de décision
library(rpart.plot)
library(rpart)
library(rpart.plot)
indiv$i_cnfpol
indiv$i_cnfpol_rec
indiv["i_cnfpol_1"] = (indiv$i_cnfpol == 1)*1
indiv$i_cnfpol_1
data = select(indiv,c(i_cnfpol_1,agenq, durar2, group1_code,i_contri_rec,l_quart_secu_rec,l_immi_code,qpv_i,a_quart_code))
knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(tidyverse)
library(dplyr)
library(labelled)
library(survey)
library(arrow)
library(ggplot2)
library(questionr)
install.packages("rpart.plot") #pour l'arbre de décision
library(rpart)
library(rpart.plot)
source("Base.R")
install.packages("rpart.plot")
indiv["i_cnfpol_1"] = (indiv$i_cnfpol == 1)*1
data = select(indiv,c(i_cnfpol_1,agenq, durar2, group1_code,i_contri_rec,l_quart_secu_rec,l_immi_code,qpv_i,a_quart_code))
column(indiv)
data = select(indiv,c(i_cnfpol_1,agenq, durar2, group1_code,i_contri_rec,l_quart_secu_rec,l_immi_code,qpv_i,a_rquart_code))
data
fit <- rpart(i_cnfpol_1~., data = data, method = 'class')
rpart.plot(fit, extra = 106)
rpart.plot(fit, extra = 101)
6
rpart.plot(fit, extra = 106)
fit <- rpart(i_cnfpol_1~., data = data, method = 'class')
rpart.plot(fit, extra = 106)
fit <- rpart(i_cnfpol_1~, data = data, method = 'class')
data = select(indiv,c(i_cnfpol_1,agenq, durar2, group1_code,group2_class,i_contri_rec,l_quart_secu_rec,l_immi_code,qpv_i,a_rquart_code))
data = select(indiv,c(i_cnfpol_1,agenq, durar2, group1_code,origine_tous_g2_class,i_contri_rec,l_quart_secu_rec,l_immi_code,qpv_i,a_rquart_code))
fit <- rpart(i_cnfpol_1~., data = data, method = 'class')
rpart.plot(fit, extra = 106)
fit <- rpart(i_cnfpol_1~group1_code, data = data, method = 'class')
rpart.plot(fit, extra = 106)
fit <- rpart(i_cnfpol_1~group1_code + durar2, data = data, method = 'class')
rpart.plot(fit, extra = 106)
install.packages("rpart") #pour l'arbre de décision
install.packages("rpart")
install.packages("rpart") #pour l'arbre de décision
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
library(tidyverse)
library(questionr)
library(FactoMineR)
library(factoextra)
library(explor)
library(Factoshiny)
indiv_acm1 <- indiv %>%
select(i_cnfpol_rec, i_contri_rec, i_control_rec_a, i_control_rec_b, i_control_rec_c, i_control_rec_d, i_control_rec_e, i_control_rec_f, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec, durtotfrm, durar2, agenq)
"eq 50%" = "3",
"inf 50%" = "4",
"Aucun" = "5",
"null" = "8",
"null" = "9")
#Faisons de i_controla et i_controlb une seule est même variable :
## A : Ils vous ont expliqué ce qu'ils faisaient et pourquoi
res = rep(0,dimension[1])
res[which(indiv$i_controla_a == 1 | indiv$i_controlb_d == 1)] = 1
indiv["i_control_rec_a"] = res
## B : Ils ont été polis
res = rep(0,dimension[1])
res[which(indiv$i_controla_f == 1 | indiv$i_controlb_b == 1)] = 1
indiv["i_control_rec_b"] = res
## C : Ils vous ont tutoyé
res = rep(0,dimension[1])
res[which(indiv$i_controla_c == 1 | indiv$i_controlb_a == 1)] = 1
indiv["i_control_rec_c"] = res
## D : Ils ont fouillé vos vêtements et vos sacs
res = rep(0,dimension[1])
res[which(indiv$i_controla_b == 1 | indiv$i_controlb_c == 1)] = 1
indiv["i_control_rec_d"] = res
## E : Ils vous ont provoqué, insulté
res = rep(0,dimension[1])
res[which(indiv$i_controla_d == 1 | indiv$i_controlb_e == 1)] = 1
indiv["i_control_rec_e"] = res
## F : Ils ont été brutaux
res = rep(0,dimension[1])
res[which(indiv$i_controla_e == 1 | indiv$i_controlb_f == 1)] = 1
indiv["i_control_rec_f"] = res
## G : Rien de tout cela
res = rep(0,dimension[1])
res[which(indiv$i_controla_g == 1 | indiv$i_controlb_g == 1)] = 1
indiv["i_control_rec_g"] = res
## H : Refus ou ne sait pas
res = rep(0,dimension[1])
res[which(indiv$i_controla_flag == 1 | indiv$i_controlb_flag == 1)] = 1
indiv["i_control_rec_flag"] = res
indiv_pd <- svydesign(ids = indiv$ident, data = indiv, weights = indiv$poidsi)
#
# pondation = function(var,var_contrainte,contrainte,size=dimension[1]){
#   labels = unique(var)
#   p = rep(0,size)
#
#   for (l in labels){
#     index = which(var==l & var_contrainte != contrainte)
#     p[index] = 1/length(index)
#   }
#
#   return(p)
# }
indiv_acm1 <- indiv %>%
select(i_cnfpol_rec, i_contri_rec, i_control_rec_a, i_control_rec_b, i_control_rec_c, i_control_rec_d, i_control_rec_e, i_control_rec_f, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec, durtotfrm, durar2, agenq)
res <- MCA(indiv_acm1, quali.sup = c(8,13), quanti.sup = c(14, 16), weights(indiv$poidsi))#les supplémentaires sont aux rang 8à 16
indiv_acm1
dim(indiv_acm1)
type(indiv_acm1)
str(indiv_acm1)
tt <- str(indiv_acm1)
View(indiv_acm1)
indiv <- indiv %>%
mutate(i_control_rec_a = case_when(i_controla_a == 1 | i_controlb_d==1 ~ "Ils vous ont expliqué ce qu'ils faisaient et pourquoi",
i_controla_a == NA | i_controlb_d== NA ~ "Refus ou ne sait pas",
TRUE ~ "Ils ne vous ont rien expliqué"))
View(indiv %>% select(i_control_rec_a))
indiv$i_control_rec_a <- as.factor(indiv$i_control_rec_a)
View(indiv %>% select(i_control_rec_a))
View(indiv %>% select(i_control_rec_a, i_controla_a, i_controlb_d))
indiv <- indiv %>%
mutate(i_control_rec_a = case_when(i_controla_a == 1 | i_controlb_d==1 ~ "Ils vous ont expliqué ce qu'ils faisaient et pourquoi",
is.na(i_controla_a) & is.na(i_controlb_d) ~ "Refus ou ne sait pas",
TRUE ~ "Ils ne vous ont rien expliqué"))
indiv$i_control_rec_a <- as.factor(indiv$i_control_rec_a)
View(indiv %>% select(i_control_rec_a, i_controla_a, i_controlb_d))
table(indiv$i_control_rec_a)
indiv$i_controla_flag
indiv %>% select(i_controla_flag, i_controla_a)
indiv %>% select(i_controla_flag, i_controla_a) %>% View()
indiv_acm1 <- indiv %>%
select(i_cnfpol_rec, i_contri_rec, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec, durtotfrm, durar2, agenq)
indiv <- indiv %>%
mutate(d_lieudisagr_d_rec = case_when(d_lieudisagr_d == 1 ~ "Discrimination lors d'un contrôle de police",
d_lieudisagr_flag == 0 ~ "Pas d'expérience de discrimination",
d_lieudisagr_flag == -1 | d_lieudisagr_flag == -2 ~ ~ "Refus ou ne sait pas",
TRUE ~ "Discrimination autre que police"))
indiv$d_lieudisagr_d_rec <- as.factor(indiv$d_lieudisagr_d_rec)
indiv$d_lieudisagr_d
indiv$d_lieudisagr_flag
table(indiv$d_lieudisagr_flag)
indiv <- indiv %>%
mutate(d_lieudisagr_d_rec = case_when(d_lieudisagr_d == 1 ~ "Discrimination lors d'un contrôle de police",
d_lieudisagr_flag == 0 ~ "Pas d'expérience de discrimination",
d_lieudisagr_flag == -1 | d_lieudisagr_flag == -2 ~ "Refus ou ne sait pas",
TRUE ~ "Discrimination autre que police"))
indiv$d_lieudisagr_d_rec <- as.factor(indiv$d_lieudisagr_d_rec)
table(indiv$d_lieudisagr_d_rec)
indiv <- indiv %>%
mutate(d_lieudisagr_d_rec = case_when(d_lieudisagr_d == 1 ~ "Discrimination lors d'un contrôle de police",
d_lieudisagr_flag == 0 ~ "Pas d'expérience de discrimination",
d_lieudisagr_flag == -1 | d_lieudisagr_flag == -2 ~ NA,
TRUE ~ "Discrimination autre que police"))
indiv <- indiv %>%
mutate(d_lieudisagr_d_rec = case_when(d_lieudisagr_d == 1 ~ "Discrimination lors d'un contrôle de police",
d_lieudisagr_flag == 0 ~ "Pas d'expérience de discrimination",
d_lieudisagr_flag == -1 | d_lieudisagr_flag == -2 ~ NA_factor_,
TRUE ~ "Discrimination autre que police"))
indiv <- indiv %>%
mutate(d_lieudisagr_d_rec = case_when(d_lieudisagr_d == 1 ~ "Discrimination lors d'un contrôle de police",
d_lieudisagr_flag == 0 ~ "Pas d'expérience de discrimination",
d_lieudisagr_flag == -1 | d_lieudisagr_flag == -2 ~ NA,
TRUE ~ "Discrimination autre que police"))
indiv <- indiv %>%
mutate(d_lieudisagr_d_rec = case_when(d_lieudisagr_d == 1 ~ "Discrimination lors d'un contrôle de police",
d_lieudisagr_flag == 0 ~ "Pas d'expérience de discrimination",
d_lieudisagr_flag == -1 | d_lieudisagr_flag == -2 ~ NA_character_,
TRUE ~ "Discrimination autre que police"))
indiv$d_lieudisagr_d_rec <- as.factor(indiv$d_lieudisagr_d_rec)
indiv_acm1 <- indiv %>%
select(i_cnfpol_rec, i_contri_rec, d_lieudisagr_d_rec, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec, durtotfrm, durar2, agenq)
res <- MCA(indiv_acm1, quali.sup = c(3,8), quanti.sup = c(8, 11), weights(indiv$poidsi))#les supplémentaires sont aux rang 8à 16
View(indiv_acm1)
res <- MCA(indiv_acm1, quali.sup = c(3,8), quanti.sup = c(8, 11), weights(indiv$poidsi))#les supplémentaires sont aux rang 8à 16
res <- MCA(indiv_acm1, quali.sup = c(3,8), quanti.sup = c(8, 11), weights(indiv$poidsi))#les supplémentaires sont aux rang 8à 16
indiv_acm1 <- indiv %>%
select(i_cnfpol_rec, i_contri_rec, d_lieudisagr_d_rec, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec) #, durtotfrm, durar2, agenq
res <- MCA(indiv_acm1, quali.sup = c(3,8),  weights(indiv$poidsi))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
indiv_acm1 <- indiv %>%
select(i_cnfpol_rec, i_contri_rec, d_lieudisagr_d_rec, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec, poidsi) #, durtotfrm, durar2, agenq
res <- MCA(indiv_acm1, quali.sup = c(3,8),  weights(poidsi))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
res <- MCA(indiv_acm1, quali.sup = c(3,8),  weights(poidsi))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
res <- MCA(indiv_acm1, quali.sup = c(2,8),  weights(poidsi))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
indiv_acm1 <- indiv %>%
select(i_cnfpol_rec, i_contri_rec, poidsi) #d_lieudisagr_d_rec, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec, , durtotfrm, durar2, agenq
res <- MCA(indiv_acm1,   weights(poidsi))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
indiv_acm1 <- indiv %>%
select(i_cnfpol_rec, i_contri_rec, d_lieudisagr_d_rec, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec, durtotfrm, durar2, agenq) #, durtotfrm, durar2, agenq
res <- MCA(indiv_acm1, quali.sup = c(4,8), quanti.sup = c(8, 11))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
res <- MCA(indiv_acm1, quali.sup = c(4,8))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
indiv_acm1 <- indiv %>%
select(i_cnfpol_rec, i_contri_rec, d_lieudisagr_d_rec, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec) #, durtotfrm, durar2, agenq
res <- MCA(indiv_acm1, quali.sup = c(4,8))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
explor(res)
MCAshiny(res)# ça permet de voir le graphe tester des choses, produire un rapport automatique et tester la classification
indiv_acm1 <- indiv %>%
filter(i_cnfpol_rec!="Refus ou ne sait pas", i_contri_rec!="Refus ou ne sait pas", d_lieudisagr_d_rec!="Refus ou ne sait pas") %>%
select(i_cnfpol_rec, i_contri_rec, d_lieudisagr_d_rec, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec) #, durtotfrm, durar2, agenq
res <- MCA(indiv_acm1, quali.sup = c(4,8))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
explor(res)
res <- MCA(indiv_acm1, quali.sup = c(4:8))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
res <- MCA(indiv_acm1, quali.sup = c(4:8), weights(poidsi))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
indiv_acm1 <- indiv %>%
filter(i_cnfpol_rec!="Refus ou ne sait pas", i_contri_rec!="Refus ou ne sait pas", d_lieudisagr_d_rec!="Refus ou ne sait pas") %>%
select(i_cnfpol_rec, i_contri_rec, d_lieudisagr_d_rec, origine_tous_g2_rec, l_immi_rec, a_rquart_code, l_quart_secu_rec, qpv_i_rec, poidsi) #, durtotfrm, durar2, agenq
res <- MCA(indiv_acm1, quali.sup = c(4:8), weights(poidsi))#les supplémentaires sont aux rang 8à 16#quanti.sup = c(8, 11),
